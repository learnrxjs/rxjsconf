import { buildDateFromTime } from "../lib"

export const UNKNOWN_SPEAKER = "unknown-speaker"

export type SpeakerSocial = {
  type: "twitter" | "telegram" | "web_site" | "github" | "youtube"
  value: string
  text: string
}

export type Speaker = {
  id: string
  firstName: string
  lastName: string
  bio: string
  avatarUrl: string
  job: string
  socials: readonly SpeakerSocial[]
}

export type Talk = {
  id: string
  speakerId: Speaker["id"]
  title: string
  description: string
  slidesUrl: string | null
  videoUrl: string | null
}

export type BreakScheduleRow = {
  type: "BREAK",
  title: string
}

export type TalkScheduleRow = {
  type: "TALK",
  talk: Talk
  speaker: Speaker
}

export type ScheduleRow = (BreakScheduleRow | TalkScheduleRow) & { time: Date }

export const speakers: ReadonlyMap<Speaker["id"], Speaker> = new Map<Speaker["id"], Speaker>()
  .set("sam-bulatov", {
    id: "sam-bulatov",
    firstName: "–°—ç–º",
    lastName: "–ë—É–ª–∞—Ç–æ–≤",
    bio: `–í–µ–¥—É—â–∏–π —Ñ—Ä–æ–Ω—Ç –≤ <a target="_blank" href="https://waliot.com">Waliot</a> –∏–∑ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞, –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è krd.dev. –õ—é–±–∏—Ç Angular –∏ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ OSS, –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é RxJS –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫, —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–¥–∫–∞—Å—Ç–∞ NgRuAir. –§–∞–Ω–∞—Ç–µ–µ—Ç –ø–æ –∞–Ω–∏–º–µ –∏ –º–∞–Ω–≥–µ.`,
    avatarUrl: "https://ysrkaxltbcvxajqnnpdw.supabase.co/storage/v1/object/public/images/sam-bulatov",
    job: "Waliot, krd.dev",
    socials: [
      { type: "telegram", value: "https://t.me/mephistorine", text: "@mephistorine" },
      { type: "twitter", value: "https://twitter.com/mephistorine", text: "@mephistorine" },
      { type: "web_site", value: "https://mephi.dev", text: "mephi.dev" },
    ]
  })
  .set("denis-makarov", {
    id: "denis-makarov",
    firstName: "–î–µ–Ω–∏—Å",
    lastName: "–ú–∞–∫–∞—Ä–æ–≤",
    bio: "Senior developer –≤ –∫–æ–º–ø–∞–Ω–∏–∏ 1inch. –ë–æ–ª–µ–µ 6 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞—é —Å Angular/RxJS. –£–≤–ª–µ–∫–∞—é—Å—å –±–ª–æ–∫—á–µ–π–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏, dApp –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º. –ü—Ä–æ–±—É—é –≤–µ—Å—Ç–∏ –∫–∞–Ω–∞–ª –ø—Ä–æ web3 —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É. –ü–∏—à—É –ø—Ä–æ RxJS, –∫–æ–≥–¥–∞ –µ—Å—Ç—å –≤—Ä–µ–º—è üôÇ –∏ –∞–¥–º–∏–Ω—é —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —á–∞—Ç–∏–∫ RxJS.",
    avatarUrl: "https://ysrkaxltbcvxajqnnpdw.supabase.co/storage/v1/object/public/images/denis-makarov",
    job: "1inch Network",
    socials: [
      { type: "telegram", value: "https://t.me/limitofzero", text: "@limitofzero" },
      { type: "twitter", value: "https://twitter.com/limitofzero", text: "@limitofzero" },
      { type: "github", value: "https://github.com/limitofzero", text: "@limitofzero" }
    ]
  })
  .set(UNKNOWN_SPEAKER, {
    id: UNKNOWN_SPEAKER,
    firstName: "(Ôø£‚ñΩÔø£)„Éé",
    lastName: "",
    bio: "–î–æ–∫–ª–∞–¥—á–∏–∫ —É—Ç–æ—á–Ω—è–µ—Ç—Å—è",
    avatarUrl: "https://ysrkaxltbcvxajqnnpdw.supabase.co/storage/v1/object/public/images/mephi-green-lightweight.jpeg",
    job: "",
    socials: []
  })

export const talks: ReadonlyMap<Talk["id"], Talk> = new Map<Talk["id"], Talk>()
  .set("sam-bulatov-talk", {
    id: "sam-bulatov-talk",
    speakerId: "sam-bulatov",
    title: "–®–µ–¥—É–ª–µ—Ä—ã –≤ RxJS",
    description: `–ë—É–¥—É —Ä–∞–∑–±–∏—Ä–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–æ—Å—Ç–∏ —Ç–æ–≥–æ –∫–∞–∫ RxJS —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω—â–∏–Ω–æ–π, –∫–∞–∫–∏–µ –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏ –∏ –∫–æ–≥–¥–∞ –∏—Ö –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –±—É–¥—É –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—Ç—å —Ç–µ–º—É —à—É–¥–µ–ª–µ—Ä–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ —Ç–∏–ø—É observeOn. –ö–æ–º–±–∏–Ω–∞—Ü–∏—è –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã —Å RxJS –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.`,
    slidesUrl: null,
    videoUrl: null
  })
  .set("denis-makarov-talk", {
    id: "denis-makarov-talk",
    speakerId: "denis-makarov",
    title: "–ì–æ—Ç–æ–≤–∏–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ —á–∏—Ç–∞–µ–º—ã–π RxJS",
    description: "–ó–∞—Ç—Ä–æ–Ω–µ–º —Ç–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–æ –≤—Å–ø–ª—ã–≤–∞—é—Ç –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ RxJS. –ü–æ–≥–æ–≤–æ—Ä–∏–º –ø—Ä–æ –≤–µ—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å - \"–Ω—É–∂–Ω–∞ –ª–∏ –æ—Ç–ø–∏—Å–∫–∞?\". –ö–æ–≥–¥–∞ –≤–∞–º —Ç–æ—á–Ω–æ –Ω–µ –Ω—É–∂–µ–Ω tap. –ö–∞–∫ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à Observable —Ç–∞–∫, —á—Ç–æ–±—ã –±—ã–ª–æ –Ω–µ —Å—Ç—ã–¥–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Ç–∏–º–ª–∏–¥—É.",
    slidesUrl: null,
    videoUrl: null
  })
  .set("unknown-talk", {
    id: "unknown-talk",
    speakerId: UNKNOWN_SPEAKER,
    title: "‚îê(Ôø£„ÉòÔø£;)‚îå",
    description: "–î–æ–∫–ª–∞–¥ —É—Ç–æ—á–Ω—è–µ—Ç—Å—è...",
    slidesUrl: null,
    videoUrl: null
  })

export function getSchedule(): readonly Readonly<ScheduleRow>[] {
  const parseTime = buildDateFromTime(new Date(2022, 11, 11))
  return [
    { type: "BREAK", time: parseTime("12:00"), title: "–û—Ç–∫—Ä—ã—Ç–∏–µ" },
    {
      type: "TALK",
      time: parseTime("12:10"),
      talk: talks.get("sam-bulatov-talk")!,
      speaker: speakers.get(talks.get("sam-bulatov-talk")!.speakerId)!
    },
    { type: "BREAK", time: parseTime("12:50"), title: "–ü–µ—Ä–µ—Ä—ã–≤" },
    {
      type: "TALK",
      time: parseTime("13:00"),
      talk: talks.get("denis-makarov-talk")!,
      speaker: speakers.get(talks.get("denis-makarov-talk")!.speakerId)!
    },
    { type: "BREAK", time: parseTime("13:40"), title: "–ü–µ—Ä–µ—Ä—ã–≤" },
    {
      type: "TALK",
      time: parseTime("13:50"),
      talk: talks.get("unknown-talk")!,
      speaker: speakers.get(talks.get("unknown-talk")!.speakerId)!
    },
    { type: "BREAK", time: parseTime("14:30"), title: "–ó–∞–∫—Ä—ã—Ç–∏–µ" }
  ]
}

export const SITE_SOCIALS: readonly Readonly<SpeakerSocial>[] = [
  { type: "telegram", value: "https://t.me/rxjsconf", text: "–¢–µ–ª–µ–≥—Ä–∞–º" },
  { type: "twitter", value: "https://twitter.com/rxjsconf", text: "–¢–≤–∏—Ç—Ç–µ—Ä" },
  { type: "github", value: "https://github.com/learnrxjs", text: "–ì–∏—Ç—Ö–∞–±" },
  { type: "youtube", value: "https://www.youtube.com/@rxjsconf", text: "–Æ—Ç—É–±" }
]
